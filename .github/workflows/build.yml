name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release and upload assets
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20' # Replace with your Go version

      - name: Build and cross-compile
        env:
          CGO_ENABLED: 0
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }} # Access the API key from secrets
        run: |
          mkdir -p dist
          for os in linux darwin windows; do
            for arch in amd64 arm64; do
              if [ "$os" == "windows" ]; then
                ext=".exe"
              else
                ext=""
              fi
              output="dist/k8au-shell-analyser-${os}-${arch}${ext}"
              GOOS=$os GOARCH=$arch go build -ldflags "-X github.com/ksauraj/k8au-shell-analyzer/internal/gemini.apiKey=$GEMINI_API_KEY" -o $output ./cmd/k8au-shell-analyzer/main.go
            done
          done

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-linux-amd64
          asset_name: k8au-shell-analyser-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-linux-arm64
          asset_name: k8au-shell-analyser-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-darwin-amd64
          asset_name: k8au-shell-analyser-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-darwin-arm64
          asset_name: k8au-shell-analyser-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-windows-amd64.exe
          asset_name: k8au-shell-analyser-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/k8au-shell-analyser-windows-arm64.exe
          asset_name: k8au-shell-analyser-windows-arm64.exe
          asset_content_type: application/octet-stream
